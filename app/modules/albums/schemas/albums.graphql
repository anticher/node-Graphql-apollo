input BandInput {
    name: String!
    origin: String
    membersId: [String]
    website: String
    genresIds: [String]
}

input ArtistInput {
    firstName: String!
    secondName: String!
    middleName: String
    birthPlace: String
    birthDate: String
    country: String
    bandsIds: [String]
    instruments: [String]
}

input GenreInput {
    name: String!
    description: String
    country: String
    year: Int
}

input TrackInput {
    title: String!
    album: String
    artistsIds: [String]
    bandsIds: [String]
    duration: Int
    released: Int
    genresIds: [String]
}

type Album {
    _id: String!
    name: String!
    released: Int
    artistsIds: [String]
    bandsIds: [String]
    trackIds: [String]
    genresIds: [String]
    image: String
}

input AddAlbumInput {
    name: String!
    released: Int
    artists: [ArtistInput]
    bands: [BandInput]
    tracks: [TrackInput]
    genres: [GenreInput]
    image: String
}

input PutAlbumInput {
    _id: ID!
    name: String
    released: Int
    artists: [ArtistInput]
    bands: [BandInput]
    tracks: [TrackInput]
    genres: [GenreInput]
    image: String
}

type Deleted {
    acknowledged: Boolean
    deletedCount: Int
}

type Query {
    albums(offset: Int, limit: Int): [Album]
    album(id: String): Album
}
type Mutation {
    addAlbum(albumInput: AddAlbumInput!): Album!
    deleteAlbum(id: String!): Deleted!
    updateAlbum(albumInput: PutAlbumInput!): Album!
}

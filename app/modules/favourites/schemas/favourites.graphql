type Band {
    name: String
    origin: String
    membersId: [String]
    website: String
    genresIds: [String]
}

type Artist {
    id: ID
    firstName: String
    secondName: String
    middleName: String
    birthPlace: String
    birthDate: String
    country: String
    bandsIds: [String]
    instruments: [String]
}

type Genre {
    name: String
    description: String
    country: String
    year: Int
}

type Track {
    title: String
    albumId: String
    artistsIds: [String]
    bandsIds: [String]
    duration: Int
    released: Int
    genresIds: [String]
}

type Favourite {
    id: ID
    userId: ID
    bands: [Band]
    genres: [Genre]
    artists: [Artist]
    tracks: [Track]
}

type FavouriteOut {
    id: String
    userId: String
    type: String
    bandsIds: [String]
    genresIds: [String]
    artistsIds: [String]
    tracksIds: [String]
}

type Query {
    favourites: Favourite
}
type Mutation {
    addTrackToFavourites(id: String!): FavouriteOut!
    addBandToFavourites(id: String!): FavouriteOut!
    addArtistToFavourites(id: String!): FavouriteOut!
    addGenreToFavourites(id: String!): FavouriteOut!
}
